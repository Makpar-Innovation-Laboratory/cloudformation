AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  componentName:
    Type: String
  pipelineUserArn:
    Type: String

Resources:
  LambdaECR:
    Type: AWS::ECR::Repository
    Description: ECR to hold image of Lambda function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
        RepositoryName: !Sub lambda-${componentName}
    RepositoryPolicyText:
      Version: "2012-10-17"
      Statement:
        - Sid: ECRLambdaPolicy
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
  
  PipelineECRPolicy:
    Type: AWS::IAM::Policy
    Description: Policy to allow pipeline to push and pull from ECR
    PolicyName: !Sub pipeline-${componentName}-ecr-policy
    PolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Sid: RepositoryPermissions
          Effect: Allow
          Action: 
            - "ecr:ListImages"
        - Sid: GeneralPermissions
          Effect: Allow
          Action:
            - "ecr:GetAuthorizationToken"
            - "ecr:BatchCheckLayerAvailability"
            - "ecr:GetDownloadUrlForLayer"
            - "ecr:GetRepositoryPolicy"
            - "ecr:DescribeRepositories"
            - "ecr:ListImages"
            - "ecr:DescribeImages"
            - "ecr:BatchGetImage"
            - "ecr:InitiateLayerUpload"
            - "ecr:UploadLayerPart"
            - "ecr:CompleteLayerUpload"
            - "ecr:PutImage"
          Resource: !GetAtt LambdaECR.Arn
    Users:
      - !Ref pipelineUserArn

  LambdaExecutor:
    Type: AWS::IAM::Role
    Description: Allows Lambda to access other AWS Services
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: 
              - "sts:AssumeRole"
      ManagedPolicies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
              
  LambdaFunctionProduction:
    Type: AWS::Lambda::Function
    Description: Lambda function deployed into Production environment
    Properties:
      FunctionName: !Sub lambda-${componentName}_master
      Code: !Sub ${LambdaECR.RepositoryUri}:master
      PackageType: Image
      Role: !GetAtt LambdaExecutor.Arn
    DependsOn: 
      - LambdaExectuor
      - LambdaECR
  
  LambdaFunctionDevelopment:
    Type: AWS::Lambda::Function
    Description: Lambda function deployed into Development environment
    Properties:
      FunctionName: !Sub lambda-${componentName}_development
      Code: !Sub ${LambdaECR.RepositoryUri}:development
      Role: !GetAtt LambdaExecutor.Arn
    DependsOn: 
      - LambdaExectuor
      - LambdaECR
  
  LambdaFunctionTest:
    Type: AWS::Lambda::Function
    Description: Lambda function deployed into Test environment
    Properties:
      FunctionName: !Sub lambda-${componentName}_test
      Code: !Sub ${LambdaECR.RepositoryUri}:test
      Role: !GetAtt LambdaExecutor.Arn
    DependsOn: 
      - LambdaExectuor
      - LambdaECR

  PipelineLambdaPolicy:
    Type: AWS::IAM::Policy
    Description: Policy to allow pipeline to update Lambda functions
    PolicyName: !Sub pipeline-${componentName}-lambda-policy
    PolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Sid: UpdateLambdaFunction
          Effect: Allow
          Action: 
            - "lambda:UpdateFunctionCode"
          Resource:
            - !Ref LambdaFunctionTest.Arn
            - !Ref LambdaFunctionDevelopment.Arn
            - !Ref LambdaFunctionProduction.Arn
    Users: 
      - !Ref pipelineUserArn

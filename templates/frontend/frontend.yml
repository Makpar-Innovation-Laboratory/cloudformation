AWSTemplateFormatVersion: "2010-09-09"

Description: "A stack containing the resources to serve the CCC-Frontend-${ENV} assets. This stack will provision "

Parameters:
  dnsStack: 
    Type: String
    Default: CCC-DNSStack-Dev

  userStack:
    Type: String
    Default: CCC-UserStack

  domain:
    Type: String
    Default: makpar-innovation.com
    
  subdomain:
    Type: String
    Default: usaspending

  environmentName:
    Type: String
    Default: Dev

Mappings:
  SubEnvDomainMap:
    Dev: 
      subdomain:  "-dev"
    Test: 
      subdomain: "-test"
    Staging: 
      subdomain: "-staging"
    Prod: 
      subdomain: ""

Resources:
  FrontendBucketLogs:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: LogDeliveryWrite
      BucketName: !Sub '${AWS::StackName}-logs'

  FrontendDeployBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub '${AWS::StackName}-deployment'
      LoggingConfiguration:
        DestinationBucketName: !Ref FrontendBucketLogs
        LogFilePrefix: 'cdn/'
      WebsiteConfiguration:
        IndexDocument: 'index.html'

  DeployBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendDeployBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action: 's3:GetObject'
            Principal: '*'
            Resource: !Sub '${FrontendDeployBucket.Arn}/*'
      Users: 
        - Fn::ImportValue: !Sub ${userStack}-PipelineUserName


  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig: 
        Aliases: !Sub
          - "${subdomainName}${subdomainEnv}.${domainName}"
          - subdomainName: !Ref subdomain
          - domainName: !Ref domain
          - subdomainEnv: !FindInMap:
            - SubEnvDomainMap
            - !Ref environmentName
        Origins: 
        - ConnectionAttempts: 3
          ConnectionTimeout: 10
          DomainName: !GetAtt FrontendDeployBucket.DomainName
          Id: !Ref FrontendDeployBucket
          CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: 'https-only'
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
        DefaultCacheBehavior: 
          AllowedMethods: 
          - "HEAD"
          - "DELETE"
          - "POST"
          - "GET"
          - "OPTIONS"
          - "PUT"
          - "PATCH"
          CachedMethods: 
          - "HEAD"
          - "GET"
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: true
          Compress: false
          SmoothStreaming: false
          TargetOriginId: !Ref FrontendDeployBucket
          ViewerProtocolPolicy: "redirect-to-https"
        PriceClass: "PriceClass_All"
        Enabled: true
        ViewerCertificate: 
          AcmCertificateArn: !Sub 
            - "arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/{certificateId}"
            - certificateId: 
              Fn::ImportValue: !Sub ${dnsStack}-CertificateId
          MinimumProtocolVersion: "TLSv1.2_2019"
          SslSupportMethod: "sni-only"
        HttpVersion: "http2"
        DefaultRootObject: 'index.html'
        IPV6Enabled: true
        Logging:
          Bucket: !GetAtt S3BucketLogs.DomainName
          IncludeCookies: false
          Prefix: 'cdn/'

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Ref domain
      RecordSets:
      - Name: !Sub
          - "${subdomainName}${subdomainEnv}.${domainName}"
          - subdomainName: !Ref subdomain
          - domainName: !Ref domain
          - subdomainEnv: !FindInMap:
            - SubEnvDomainMap
            - !Ref environmentName
        Type: A
        AliasTarget:
          DNSName: !GetAtt CloudFrontDistribution.DomainName
          EvaluateTargetHealth: false
          HostedZoneId: !Ref hostedZoneId
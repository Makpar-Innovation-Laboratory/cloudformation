AWSTemplateFormatVersion: '2010-09-09'

Description: "A stack containing the resources necessary to integrate Jira with the CodeCommit repositories provisioned in the ${applicationName}-RepoStack. This stack creates a Lambda function and hooks it into a CloudWatch event rule that watches the repositories for commits made onto environment branches."

Parameters:
  applicationName: 
    Type: String
    Default: innolab
  iamStack:
    Type: String
    Default: Innolab-IAMStack
  repoStack:
    Type: String
    Default: Innolab-RepoStack
  ecrStack:
    Type: String
    Default: Innolab-ECRStack

Resources:
  LambdaJira: 
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: !Sub ${applicationName}-lambda-jira
      Code:
        ImageUri: !Sub
          - "${ecrUri}:${tag}"
          - ecrUri:
              Fn::ImportValue: !Sub ${ecrStack}-JiraImageRepository
            tag: latest
      PackageType: Image
      Role:
        Fn::ImportValue: !Sub ${iamStack}-LambdaExecutorArn
      Environment:
        Variables:
          ATLASSIAN_TOKEN: !Sub '{{resolve:secretsmanager:${applicationName}-atlassianToken:SecretString}}'
      Timeout: 180

  BackendDevInvokeJiraLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Sub ${applicationName}-lambda-jira
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt BackendDevJiraEventRule.Arn
    DependsOn:
      - BackendDevJiraEventRule

  BackendDevJiraEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - Fn::ImportValue: !Sub "${repoStack}-BackendRepositoryARN"
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - Dev
      Targets:
        - Arn: !GetAtt LambdaJira.Arn
          Id: !Sub "${applicationName}-jira-backend-dev"

  FrontendDevInvokeJiraLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Sub ${applicationName}-lambda-jira
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt FrontendDevJiraEventRule.Arn
    DependsOn:
      - FrontendDevJiraEventRule

  FrontendDevJiraEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - Fn::ImportValue: !Sub "${repoStack}-FrontendRepositoryARN"
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - Dev
      Targets:
        - Arn: !GetAtt LambdaJira.Arn
          Id: !Sub "${applicationName}-jira-frontend-dev"

  JiraMasterInvokeJiraLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Sub ${applicationName}-lambda-jira
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt JiraMasterJiraEventRule.Arn
    DependsOn:
      - JiraMasterJiraEventRule

  JiraMasterJiraEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - Fn::ImportValue: !Sub "${repoStack}-JiraRepositoryARN"
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - master
      Targets:
        - Arn: !GetAtt LambdaJira.Arn
          Id: !Sub "${applicationName}-jira-jira-master"
  
  CloudFormationMasterInvokeJiraLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Sub ${applicationName}-lambda-jira
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CloudFormationMasterJiraEventRule.Arn
    DependsOn:
      - CloudFormationMasterJiraEventRule

  CloudFormationMasterJiraEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - Fn::ImportValue: !Sub "${repoStack}-CloudFormationRepositoryARN"
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - master
      Targets:
        - Arn: !GetAtt LambdaJira.Arn
          Id: !Sub "${applicationName}-jira-cloudformation-master"
  
  CloudFormationMasterInvokeJiraLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Sub ${applicationName}-lambda-jira
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CloudFormationFeatureJiraEventRule.Arn
    DependsOn:
      - CloudFormationFeatureJiraEventRule

  CloudFormationFeatureJiraEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - Fn::ImportValue: !Sub "${repoStack}-CloudFormationRepositoryARN"
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - feature/innolab-website
      Targets:
        - Arn: !GetAtt LambdaJira.Arn
          Id: !Sub "${applicationName}-jira-cloudformation-feature"
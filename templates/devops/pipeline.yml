AWSTemplateFormatVersion: '2010-09-09'

Description: ""

Parameters:
  applicationName:
    Type: String
    Default: innolab
  
  userStack:
    Type: String
    Default: InnoLab-UserStack

Resources:
  DockerRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub "${applicationName}-docker-images"
      RepositoryDescription: "A repository for Docker images"

  CloudFormationRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub "${applicationName}-cloudformation"
      RepositoryDescription: "A repository for CloudFormation templates"

  FrontendRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub "${applicationName}-frontend"
      RepositoryDescription: "A repository for the React application"

  BackendRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub "${applicationName}-backend"
      RepositoryDescription: "A repository for Lambda functions"
      
  TestingRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub "${applicationName}-test-harness"
      RepositoryDescription: "A repository for testing harness"

  PipelineArtifacts:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${applicationName}-pipeline-artifacts"
      
  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${applicationName}-codebuild"
      Artifacts:
        Type: CODEPIPELINE
        # Type: S3
        # Location: !Ref PipelineArtifacts
      ServiceRole:
        Fn::ImportValue: !Sub "${userStack}-CodeBuildRoleArn"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: public.ecr.aws/makpar/pipeline-builder:latest
      Source:
        Type: CODEPIPELINE

  FrontendDevEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - !GetAtt FrontendRepo.Arn
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - Dev
      Targets:
        - Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${applicationName}-frontend-dev-pipeline"
          RoleArn: 
            Fn::ImportValue: !Sub "${userStack}-CloudWatchEventRoleArn"
          Id: !Sub ${applicationName}-codepipeline-dev

  FrontendStagingEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - !GetAtt FrontendRepo.Arn
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - Staging
      Targets:
        - Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${applicationName}-frontend-staging-pipeline"
          RoleArn: 
            Fn::ImportValue: !Sub "${userStack}-CloudWatchEventRoleArn"
          Id:  !Sub ${applicationName}-codepipeline-staging

  FrontendProdEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - !GetAtt FrontendRepo.Arn
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - Prod
      Targets:
        - Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${applicationName}-frontend-prod-pipeline"
          RoleArn: 
            Fn::ImportValue: !Sub "${userStack}-CloudWatchEventRoleArn"
          Id: !Sub ${applicationName}-codepipeline-prod

  FrontendDevPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${applicationName}-frontend-dev-pipeline"
      RoleArn:
        Fn::ImportValue: !Sub "${userStack}-CodePipelineRoleArn"
      ArtifactStore: 
        Type: S3 
        Location: !Ref PipelineArtifacts
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: !Sub "${applicationName}-frontend-dev-source"    
              Configuration:
                RepositoryName: !GetAtt FrontendRepo.Name
                BranchName: Dev
                PollForSourceChanges: false
        - Name: Build   
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: !Sub "${applicationName}-frontend-dev-source"
              OutputArtifacts:
                - Name: !Sub "${applicationName}-frontend-dev-build"
              Configuration: 
                ProjectName: !Ref CodeBuild
                EnvironmentVariables: !Sub '[{"name":"BRANCH","value":"dev","type":"PLAINTEXT"},{"name":"APPLICATION","value":"${applicationName}","type":"PLAINTEXT"}]'
    DependsOn:
      - CodeBuild

  FrontendStagingPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${applicationName}-frontend-staging-pipeline"
      RoleArn:
        Fn::ImportValue: !Sub "${userStack}-CodePipelineRoleArn"
      ArtifactStore: 
        Type: S3 
        Location: !Ref PipelineArtifacts
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: !Sub "${applicationName}-frontend-staging-source"    
              Configuration:
                RepositoryName: !GetAtt FrontendRepo.Name
                BranchName: Staging
                PollForSourceChanges: false
        - Name: Build   
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: !Sub "${applicationName}-frontend-staging-source"
              OutputArtifacts:
                - Name: !Sub "${applicationName}-frontend-staging-build"
              Configuration: 
                ProjectName: !Ref CodeBuild
                EnvironmentVariables: !Sub '[{"name":"BRANCH","value":"staging","type":"PLAINTEXT"},{"name":"APPLICATION","value":"${applicationName}","type":"PLAINTEXT"}]'
    DependsOn:
      - CodeBuild

  FrontendProdPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${applicationName}-frontend-prod-pipeline"
      RoleArn:
        Fn::ImportValue: !Sub "${userStack}-CodePipelineRoleArn"
      ArtifactStore: 
        Type: S3 
        Location: !Ref PipelineArtifacts
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: !Sub "${applicationName}-frontend-prod-source"    
              Configuration:
                RepositoryName: !GetAtt FrontendRepo.Name
                BranchName: Prod
                PollForSourceChanges: false
        - Name: Build   
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: !Sub "${applicationName}-frontend-prod-source"
              OutputArtifacts:
                - Name: !Sub "${applicationName}-frontend-prod-build"
              Configuration: 
                ProjectName: !Ref CodeBuild
                EnvironmentVariables: !Sub '[{"name":"BRANCH","value":"prod","type":"PLAINTEXT"},{"name":"APPLICATION","value":"${applicationName}","type":"PLAINTEXT"}]'
    DependsOn:
      - CodeBuild
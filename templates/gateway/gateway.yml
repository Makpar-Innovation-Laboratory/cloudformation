AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  environmentName:
    Type: String
    Default: Dev

  lambdaStack:
    Type: String
    Default: CCC-LambdaStack-Dev

  userStack:
    Type: String
    Default: CCC-UserStack

Resources:
  RestAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub CCC-RestAPI-${environmentName}

  ApiGatewayAuthorizer:
    Type: "AWS::ApiGateway::Authorizer"
    Properties:
      RestApiId: !Ref RestAPI
      Name: !Sub ${AWS::StackName}-Authorizer
      Type: "COGNITO_USER_POOLS"
      IdentitySource: method.request.header.authorization
      ProviderARNs:
        - Fn::ImportValue: !Sub "${userStack}-CognitoUsers"

  GetResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestAPI
      ParentId: !GetAtt RestAPI.RootResourceId
      PathPart: 'data'
      
  # GetResourcePath:
    # Type: 'AWS::ApiGateway::Resource'
    # Properties:
      # RestApiId: !Ref RestAPI
      # Parent:Id: !Ref GetSource
      # PathPart: '{id}'
      
  GetResourceMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref RestAPI
      ResourceId: !Ref GetResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/
            - Fn::ImportValue: !Sub ${lambdaStack}-LambdaAlphaArn
            - /invocations

   # I think we need to create a deployment first? https://bl.ocks.org/magnetikonline/c314952045eee8e8375b82bc7ec68e88
  LambdaAlphaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: 
          Fn::ImportValue: !Sub ${lambdaStack}-LambdaAlphaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPI}/GET/

  PostResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestAPI
      ParentId: !GetAtt RestAPI.RootResourceId
      PathPart: 'post'

  PostResourceMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref RestAPI
      ResourceId: !Ref PostResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/
            - Fn::ImportValue: !Sub ${lambdaStack}-LambdaBetaArn
            - /invocations
  
   # I think we need to create a deployment first? https://bl.ocks.org/magnetikonline/c314952045eee8e8375b82bc7ec68e88
  LambdaBetaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: 
        Fn::ImportValue: !Sub ${lambdaStack}-LambdaAlphaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPI}/POST/

          

AWSTemplateFormatVersion: "2010-09-09"
Description: "Provisions a DB instances with credentials resolved from the SSM parameter store and deploys it into a private subnet in the CCC-VPCStack-${environmentName}."

Parameters:
  environmentName:
    Type: String
    Default: Dev
  # Stack Dependencies
  vpcStack:
    Type: String
    Default: CCC-VPCStack-Dev

Resources:
    PostgresRDS:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceIdentifier: !Sub CCC-Database-${environmentName}
        AllocatedStorage: 100
        DBInstanceClass: db.t3.micro
        Engine: "postgres"
        MasterUsername: !Sub "{{resolve:secretsmanager:${environmentName}-dbUsername:SecretString}}"
        MasterUserPassword: !Sub "{{resolve:secretsmanager:${environmentName}-dbPassword:SecretString}}"
        BackupRetentionPeriod: 7
        MultiAZ: false
        AutoMinorVersionUpgrade: true
        Iops: 1000
        PubliclyAccessible: false
        StorageType: io1
        StorageEncrypted: true
        CopyTagsToSnapshot: true
        MonitoringInterval: 60
        EnableIAMDatabaseAuthentication: false
        EnablePerformanceInsights: true
        PerformanceInsightsRetentionPeriod: 7
        DeletionProtection: false
        DBSubnetGroupName: 
          Fn::ImportValue: !Sub ${vpcStack}-DatabaseSubnetGroup
        VPCSecurityGroups: 
          - Fn::ImportValue: !Sub ${vpcStack}-DatabaseSecurityGroup
        MaxAllocatedStorage: 1000
        MonitoringRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/rds-monitoring-role"
        Tags: 
          - Key: Environment
            Value: !Ref environmentName

Outputs:
  RDSEndpoint:
    Value: !GetAtt PostgresRDS.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-RDSEndpoint
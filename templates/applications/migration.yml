
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
    applicationName:
        Type: String
        Default: innolab
        Description: Name of the application resources being deployed.
    environmentName:
        Type: String
        Default: Dev
        Description: Environment into which resources are being deplyoed
    clientKeyName:  
        Type: String
        Default: innolab_migration_client
        Description: SSH Key for EC2 Migration client. Must exist in EC2 key ring.
    hostedZoneId:
        Type: String
        Description: Physical ID of the Hosted Zone where the domain is served
    domainName: 
        Type: String
        Description: Domain where resources are hosted
        Default: makpar-innovation.net
    dbSourceUsername: 
        Type: String
        NoEcho: true
    dbSourcePassword:
        Type: String
        NoEcho: true
    dbSourceEngine:
        Type: String
        AllowedValues:
            - postgres
            - oracle
    dbTargetUsername:
        Type: String
        NoEcho: true
    dbTargetPassword:
        Type: String
        NoEcho: true
    dbTargetEngine:
        Type: String
        AllowedValues:
            - postgres
            - oracle
    targetStack:
        Type: String
    sourceStack:
        Type: String
    vpcStack:
        Type: String
        Default: Innolab-VPCStack-Dev

Mappings:
  ConfigMap:
    postgres: 
      port: 5432
      database: postgres
    oracle: 
      port: 1521
      database: ORCL


Resources:
    SourceDMSEndpoint:
        Type: "AWS::DMS::Endpoint"
        Properties:
            EndpointIdentifier: !Sub "${applicationName}-${environmentName}-source-endpoint"
            EndpointType: source
            EngineName: !Ref dbSourceEngine
            Username: !Ref dbSourceUsername
            Password: !Ref dbSourcePassword
            ServerName: 
                Fn::ImportValue: !Sub "${sourceStack}-RDSEndpoint"
            Port: 
                Fn::FindInMap:
                    - ConfigMap
                    - !Ref dbSourceEngine
                    - port
            DatabaseName:
                Fn::FindInMap:
                    - ConfigMap
                    - !Ref dbSourceEngine
                    - database
            SslMode: "none"

    TargetDMSEndpoint:
        Type: "AWS::DMS::Endpoint"
        Properties:
            EndpointIdentifier: !Sub "${applicationName}-${environmentName}-target-endpoint"
            EndpointType: target
            EngineName: !Ref dbTargetEngine
            Username: !Ref dbTargetUsername
            Password: !Ref dbTargetPassword
            ServerName: 
                Fn::ImportValue: !Sub "${targetStack}-RDSEndpoint"
            Port:
                Fn::FindInMap:
                    - ConfigMap
                    - !Ref dbTargetEngine
                    - port
            DatabaseName: 
                Fn::FindInMap:
                    - ConfigMap
                    - !Ref dbTargetEngine
                    - database
            SslMode: "none"

    ReplicationSubnetGroup: 
        Type: "AWS::DMS::ReplicationSubnetGroup"
        Properties: 
            ReplicationSubnetGroupDescription: !Sub "Replication group for the ${applicationName} ${environmentName} environment"
            ReplicationSubnetGroupIdentifier: !Sub "${applicationName}-${environmentName}-rep-subnet-group"
            SubnetIds: 
                - Fn::ImportValue: !Sub "${vpcStack}-PrivateSubnetA"
                - Fn::ImportValue: !Sub "${vpcStack}-PrivateSubnetB"
            Tags: 
                -   Key: Application
                    Value: !Ref applicationName
                -   Key: Environment
                    Value: !Ref environmentName
            
    DMSReplicationInstance:
        Type: "AWS::DMS::ReplicationInstance"
        Properties:
            ReplicationInstanceIdentifier: !Sub "${applicationName}-${environmentName}-replication-instance"
            ReplicationInstanceClass: "dms.t3.medium"
            AllocatedStorage: 5
            VpcSecurityGroupIds:
              - Fn::ImportValue: !Sub "${vpcStack}-DatabaseSecurityGroup"
            AvailabilityZone: !Sub "${AWS::Region}b"
            ReplicationSubnetGroupIdentifier: !Ref ReplicationSubnetGroup
            MultiAZ: false
            EngineVersion: "3.4.6"
            AutoMinorVersionUpgrade: true
            PubliclyAccessible: false

    # ReplicationPostgresSecurityGroupIngress:
    #     Type: AWS::EC2::SecurityGroupIngress
    #     Properties:
    #     GroupId: 
    #         Fn::ImportValue: !Sub "${vpcStack}-DatabaseSecurityGroup"
    #     IpProtocol: tcp
    #     SourceSecurityGroupId: !GetAtt NATSecurityGroup.GroupId
    #     FromPort: 5432
    #     ToPort: 5432

    # ReplicationPostgresSecurityGroupIngress:
    #     Type: AWS::EC2::SecurityGroupIngress
    #     Properties:
    #     GroupId: 
    #         Fn::ImportValue: !Sub "${vpcStack}-DatabaseSecurityGroup"
    #     IpProtocol: tcp
    #     SourceSecurityGroupId: !GetAtt NATSecurityGroup.GroupId
    #     FromPort: 1521
    #     ToPort: 1521

    ClientRole:
        Type: "AWS::IAM::Role"
        Properties:
            Path: !Sub "/${applicationName}/"
            RoleName: !Sub "${applicationName}-migration-executor"
            AssumeRolePolicyDocument: 
                Version: "2012-10-17"
                Statement:
                    -   Effect: Allow
                        Principal: 
                            Service:
                                - ec2.amazonaws.com
                        Action:
                            - "sts:AssumeRole"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
                - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
            Policies:
                -   PolicyName: !Sub ${applicationName}-migration-secret-policy
                    PolicyDocument:
                        Version: "2012-10-17"
                        Statement:
                        -   Sid: SecretManagerPermissions
                            Action: 
                                - secretsmanager:GetSecretValue
                            Effect: Allow
                            Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${applicationName}-*"
                        -   Sid: EC2Permissions
                            Action:
                                - ec2:Describe*
                            Effect: Allow
                            Resource: '*'

            Description: "Role for Migration EC2 to access other services"
            Tags:
                -   Key: "Application"
                    Value: !Ref applicationName
                -   Key: "Environment"
                    Value: !Ref environmentName

    ClientProfile:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            Path: "/"
            InstanceProfileName: !Ref ClientRole
            Roles: 
                - !Ref ClientRole

    MigrationClient:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: "ami-0728c171aa8e41159"
            InstanceType: "t2.large"
            KeyName: !Ref clientKeyName
            NetworkInterfaces:
                -   DeviceIndex: '0'
                    SubnetId: 
                        Fn::ImportValue: !Sub "${vpcStack}-PublicSubnetA"
                    AssociatePublicIpAddress: true
                    GroupSet: [Fn::ImportValue: !Sub "${vpcStack}-NATSecurityGroup", Fn::ImportValue: !Sub "${vpcStack}-DatabaseSecurityGroup"]  
            IamInstanceProfile: !Ref ClientProfile
            Tags: 
                -   Key: Name
                    Value: !Sub ${applicationName}-${environmentName}-migration
                -   Key: "Environment"
                    Value: !Ref environmentName
                -   Key: "Application"
                    Value: !Ref applicationName
                -   Key: "AutoStop"
                    Value: True
                -   Key: "AutoStart"
                    Value: True
            UserData: 
                Fn::Base64: |
                    #!/bin/bash
                    yum install xdg-utils -y 
                    cd /home/
                    wget https://s3.amazonaws.com/publicsctdownload/Fedora/aws-schema-conversion-tool-1.0.latest.zip
                    unzip aws-schema-conversion-tool-1.0.latest.zip
                    rpm -i aws-schema-conversion-tool-1.0.660-1.x86_64.rpm

    MigrationElasticIP:
        Type: AWS::EC2::EIP
        Properties:
            InstanceId: !Ref MigrationClient

    MigrationRoute53RecordSetGroup:
        Type: AWS::Route53::RecordSetGroup
        Properties:
            HostedZoneId: !Ref hostedZoneId
            RecordSets:
                -   Name: !Sub "${applicationName}-migration.${domainName}"
                    Type: A
                    ResourceRecords: 
                        - !Ref MigrationElasticIP
                    TTL: 900

    # DMSReplicationTask:
    #     Type: "AWS::DMS::ReplicationTask"
    #     Properties:
    #         ReplicationTaskIdentifier: "${applicationName}-${environmentName}-migration-task"
    #         SourceEndpointArn: !Ref SourceDMSEndpoint
    #         TargetEndpointArn: !Ref TargetDMSEndpoint
    #         ReplicationInstanceArn: !Ref DMSReplicationInstance
    #         MigrationType: "full-load"
    #         TableMappings: "{\"rules\":[
    #             {\"rule-type\":\"transformation\",\"rule-id\":\"127012249\",\"rule-name\":\"127012249\",\"rule-target\":\"column\",\"object-locator\":{\"schema-name\":\"%\",\"table-name\":\"%\",\"column-name\":\"%\"},\"rule-action\":\"convert-lowercase\",\"value\":null,\"old-value\":null},{\"rule-type\":\"selection\",\"rule-id\":\"126989950\",\"rule-name\":\"126989950\",\"object-locator\":{\"schema-name\":\"MARRYSHELLY\",\"table-name\":\"%\"},\"rule-action\":\"include\",\"filters\":[]}]}"
    #         ReplicationTaskSettings: "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":false,\"LobChunkSize\":0,\"LimitedSizeLobMode\":true,\"LobMaxSize\":32,\"InlineLobMaxSize\":0,\"LoadMaxFileSize\":0,\"ParallelLoadThreads\":0,\"ParallelLoadBufferSize\":0,\"BatchApplyEnabled\":false,\"TaskRecoveryTableEnabled\":false,\"ParallelLoadQueuesPerThread\":0,\"ParallelApplyThreads\":0,\"ParallelApplyBufferSize\":0,\"ParallelApplyQueuesPerThread\":0},\"FullLoadSettings\":{\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":true,\"LogComponents\":[{\"Id\":\"TRANSFORMATION\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"SOURCE_UNLOAD\",\"Severity\":\"LOGGER_SEVERITY_DETAILED_DEBUG\"},{\"Id\":\"IO\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"TARGET_LOAD\",\"Severity\":\"LOGGER_SEVERITY_DETAILED_DEBUG\"},{\"Id\":\"PERFORMANCE\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"SOURCE_CAPTURE\",\"Severity\":\"LOGGER_SEVERITY_DETAILED_DEBUG\"},{\"Id\":\"SORTER\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"REST_SERVER\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"VALIDATOR_EXT\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"TARGET_APPLY\",\"Severity\":\"LOGGER_SEVERITY_DETAILED_DEBUG\"},{\"Id\":\"TASK_MANAGER\",\"Severity\":\"LOGGER_SEVERITY_DETAILED_DEBUG\"},{\"Id\":\"TABLES_MANAGER\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"METADATA_MANAGER\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"FILE_FACTORY\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"COMMON\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"ADDONS\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"DATA_STRUCTURE\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"COMMUNICATION\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"},{\"Id\":\"FILE_TRANSFER\",\"Severity\":\"LOGGER_SEVERITY_DEFAULT\"}],\"CloudWatchLogGroup\":\"dms-tasks-innolab-migtask-orcl2pgres-dev\",\"CloudWatchLogStream\":\"dms-task-innolab-migtask-orcl2pgres-dev\"},\"ControlTablesSettings\":{\"historyTimeslotInMinutes\":5,\"ControlSchema\":\"\",\"HistoryTimeslotInMinutes\":5,\"HistoryTableEnabled\":false,\"SuspendedTablesTableEnabled\":false,\"StatusTableEnabled\":false,\"FullLoadExceptionTableEnabled\":false},\"StreamBufferSettings\":{\"StreamBufferCount\":3,\"StreamBufferSizeInMB\":8,\"CtrlStreamBufferSizeInMB\":5},\"ChangeProcessingDdlHandlingPolicy\":{\"HandleSourceTableDropped\":true,\"HandleSourceTableTruncated\":true,\"HandleSourceTableAltered\":true},\"ErrorBehavior\":{\"DataErrorPolicy\":\"LOG_ERROR\",\"DataTruncationErrorPolicy\":\"LOG_ERROR\",\"DataErrorEscalationPolicy\":\"SUSPEND_TABLE\",\"DataErrorEscalationCount\":0,\"TableErrorPolicy\":\"SUSPEND_TABLE\",\"TableErrorEscalationPolicy\":\"STOP_TASK\",\"TableErrorEscalationCount\":0,\"RecoverableErrorCount\":-1,\"RecoverableErrorInterval\":5,\"RecoverableErrorThrottling\":true,\"RecoverableErrorThrottlingMax\":1800,\"RecoverableErrorStopRetryAfterThrottlingMax\":true,\"ApplyErrorDeletePolicy\":\"IGNORE_RECORD\",\"ApplyErrorInsertPolicy\":\"LOG_ERROR\",\"ApplyErrorUpdatePolicy\":\"LOG_ERROR\",\"ApplyErrorEscalationPolicy\":\"LOG_ERROR\",\"ApplyErrorEscalationCount\":0,\"ApplyErrorFailOnTruncationDdl\":false,\"FullLoadIgnoreConflicts\":true,\"FailOnTransactionConsistencyBreached\":false,\"FailOnNoTablesCaptured\":true},\"ChangeProcessingTuning\":{\"BatchApplyPreserveTransaction\":true,\"BatchApplyTimeoutMin\":1,\"BatchApplyTimeoutMax\":30,\"BatchApplyMemoryLimit\":500,\"BatchSplitSize\":0,\"MinTransactionSize\":1000,\"CommitTimeout\":1,\"MemoryLimitTotal\":1024,\"MemoryKeepTime\":60,\"StatementCacheSize\":50},\"ValidationSettings\":{\"EnableValidation\":true,\"ValidationMode\":\"ROW_LEVEL\",\"ThreadCount\":5,\"PartitionSize\":10000,\"FailureMaxCount\":10000,\"RecordFailureDelayInMinutes\":5,\"RecordSuspendDelayInMinutes\":30,\"MaxKeyColumnSize\":8096,\"TableFailureMaxCount\":1000,\"ValidationOnly\":false,\"HandleCollationDiff\":false,\"RecordFailureDelayLimitInMinutes\":0,\"SkipLobColumns\":false,\"ValidationPartialLobSize\":0,\"ValidationQueryCdcDelaySeconds\":0},\"PostProcessingRules\":null,\"CharacterSetSettings\":null,\"LoopbackPreventionSettings\":null,\"BeforeImageSettings\":null,\"FailTaskWhenCleanTaskResourceFailed\":false,\"TTSettings\":null}"


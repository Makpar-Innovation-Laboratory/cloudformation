#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="rds-stack"
SCRIPT_DES=$'Deliver RDS host URL to \e[1mSecretManager\e[0m'
PROJECT_DIR=$SCRIPT_DIR/../..
source $PROJECT_DIR/.env

# Example Usage:
# >$     secret-rds-host --environment <Dev | Prod | Test> \
#                        --action <create | update>

#   NOTE: `--action` defaults to `create` if not supplied

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        --action|-action|--a|-a)
            ACTION="$2"
            shift
            shift 
            ;;
        --help|-help|--h|-h)
            help
            exit 0
            ;;
        --environment|-environment|--e|-e)
            ENVIRONMENT="$2"
            shift
            shift
            ;;
        *)
            log "Input not understood. See \e[3m--help\e[0m for information on using this command."
            exit 1
            ;;
    esac
done

if [ -z "$ACTION" ]
then
    ACTION="create"
fi

RDS_HOST=$(aws cloudformation describe-stacks | \
            jq ".Stacks[] | select(.StackName==\"${APPLICATION^}-${RDS_STACK}-${ENVIRONMENT}\")" | \
            jq '.Outputs[0].OutputValue' | tr -d '"')

if [ "$ACTION" == "create" ]
then
    aws secretsmanager create-secret --name "${APPLICATION}-${ENVIRONMENT}-dbHost" \
                                     --description "Database Host Secret for ${ENVIRONMENT} environment" \
                                     --secret-string $RDS_HOST
    exit 0

elif [ "$ACTION" == "update" ]
then
    aws secretsmanager update-secret --secret-id "${APPLICATION}-${ENVIRONMENT}-dbHost" \
                                     --secret-string $RDS_HOST
    exit 0
fi

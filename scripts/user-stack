#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="users-stack"
SCRIPT_DES=$''
PROJECT_DIR=$SCRIPT_DIR/..
source $PROJECT_DIR/.env

# Example Usage:
# >$     user-stack --action <create | update>
#
#   NOTE: ``--action`` defaults to `create` if not supplied.

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

POSITIONAL=()
while [[ $# -gt 0 ]]; do
       key="$1"
       case $key in
            --action)
                    ACTION="$2"
                    shift
                    shift 
                    ;;
            --help)
                    help
                    exit 0
                    ;;
            *)
                    log "Input not understood. See \e[3m--help\e[0m for information on using this command."
                    exit 1
                    ;;
       esac
done

if [ -z "$ACTION" ]
then
    ACTION="create"
fi

cp $PROJECT_DIR/templates/iam/iam.yml ./iam.yml

if [ "$ACTION" == "create" ]
then
    aws cloudformation create-stack \
        --stack-name "$USER_STACK" \
        --template-body file://iam.yml \
        --capabilities CAPABILITY_NAMED_IAM
elif [ "$ACTION" == "update" ]
then
    aws cloudformation update-stack \
        --stack-name "$USER_STACK" \
        --template-body file://iam.yml \
        --capabilities CAPABILITY_NAMED_IAM
else
    log "Action not understood."
    exit 1
fi
    
rm ./iam.yml
#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="ecs-stack"
SCRIPT_DES=$''
PROJECT_DIR=$SCRIPT_DIR/../../..
source $PROJECT_DIR/.env

# Example Usage:
# >$     backend-stack --environment <Dev | Prod | Test | Staging> \
#                       --action <create | update | delete> \
#                       --tag <tag>

#   NOTE: `--action` defaults to `create` if not supplied
#   NOTE: `--tag` defaults to `$ENVIRONMENT-v0.0.0` if not supplied

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        --action)
            ACTION="$2"
            shift
            shift 
            ;;
        --environment)
            ENVIRONMENT="$2"
            shift
            shift
            ;;
        --tag)
            TAG="$2"
            shift
            shift
            ;;
        --help)
            help
            exit 0
            ;;
        *)
            log "Input not understood. See \e[3m--help\e[0m for information on using this command."
            exit 1
            ;;
    esac
done

if [ -z "$ENVIRONMENT" ]
then
    log "Specifiy environment with \e[3m--environment\e[0m flag."
    exit 1
fi

if [ -z "$ACTION" ]
then
    ACTION="create"
fi

if [ -z "$TAG" ]
then
    TAG="$ENVIRONMENT-v0.0.0"
fi

cp $PROJECT_DIR/templates/cluster/services/backend.yml ./backend.yml

if [ "$ACTION" == "create" ]
then

    aws cloudformation create-stack \
        --stack-name "${APPLICATION^}-${BACKEND_STACK}-${ENVIRONMENT}" \
        --template-body file://backend.yml \
        --capabilities CAPABILITY_AUTO_EXPAND \
        --parameters ParameterKey=environmentName,ParameterValue=$ENVIRONMENT \
                        ParameterKey=applicationName,ParameterValue=$APPLICATION \
                        ParameterKey=port,ParameterValue="8000" \
                        ParameterKey=tag,ParameterValue="$TAG" \
                        ParameterKey=iamStack,ParameterValue="${APPLICATION^}-${IAM_STACK}" \
                        ParameterKey=repoStack,ParameterValue="${APPLICATION^}-${REPO_STACK}" \
                        ParameterKey=vpcStack,ParameterValue="${APPLICATION^}-${VPC_STACK}-${ENVIRONMENT}"

elif [ "$ACTION" == "update" ]
then

    aws cloudformation update-stack \
        --stack-name "${APPLICATION^}-${ECS_STACK}-${ENVIRONMENT}" \
        --template-body file://backend.yml \
        --capabilities CAPABILITY_AUTO_EXPAND \
        --parameters ParameterKey=environmentName,ParameterValue=$ENVIRONMENT \
                        ParameterKey=applicationName,ParameterValue=$APPLICATION \
                        ParameterKey=port,ParameterValue="8000" \
                        ParameterKey=tag,ParameterValue="$TAG" \
                        ParameterKey=iamStack,ParameterValue="${APPLICATION^}-${IAM_STACK}" \
                        ParameterKey=repoStack,ParameterValue="${APPLICATION^}-${REPO_STACK}" \
                        ParameterKey=vpcStack,ParameterValue="${APPLICATION^}-${VPC_STACK}-${ENVIRONMENT}"

elif [ "$ACTION" == "delete" ]
then
    aws cloudformation delete-stack \
        --stack-name "${APPLICATION^}-${ECS_STACK}-${ENVIRONMENT}"
else
    log "Action not understood"
fi

rm ./ecs.yml
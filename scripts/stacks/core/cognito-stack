#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="cognito-stack"
SCRIPT_DES=$''
PROJECT_DIR="$SCRIPT_DIR/../../.."
source "$PROJECT_DIR/env/.env"

# Example Usage:
# >$     cognito-stack --action <create | update | delete>
#
#   NOTE: ``--action`` defaults to `create` if not supplied.

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
       key="$1"
       case $key in
            --action|-action|--a|-a)
                ACTION="$2"
                shift
                shift 
                ;;
            --environment|--env|--e|-e)
                ENVIRONMENT="$2"
                shift
                shift
                ;;
            --help|-help|--h|-h)
                help
                exit 0
                ;;   
       esac
done

if [ -z "$ACTION" ]
then
    log "No action \e[3m--action\e[0m specified. Defaulting to \e[1mcreate\e[0m"
    ACTION="create"
fi

cp "$PROJECT_DIR/templates/core/cognito.yml" ./cognito.yml

if [ "$ACTION" == "create" ]
then
    log "Creating \e[1m${APPLICATION^}-$COGNITO_STACK-${ENVIRONMENT}\e[0m"
    aws cloudformation create-stack \
        --stack-name "${APPLICATION^}-$COGNITO_STACK-${ENVIRONMENT}" \
        --template-body file://cognito.yml \
        --capabilities CAPABILITY_NAMED_IAM \
        --parameters ParameterKey=domainName,ParameterValue=$DOMAIN \
                     ParameterKey=subdomainName,ParameterValue=$APPLICATION \
                     ParameterKey=applicationName,ParameterValue=$APPLICATION \
                     ParameterKey=environmentName,ParameterValue=$ENVIRONMENT
        
elif [ "$ACTION" == "update" ]
then
    log "Updating \e[1m${APPLICATION^}-$COGNITO_STACK-${ENVIRONMENT}\e[0m"
    aws cloudformation update-stack \
        --stack-name "${APPLICATION^}-$COGNITO_STACK-${ENVIRONMENT}" \
        --template-body file://cognito.yml \
        --capabilities CAPABILITY_NAMED_IAM \
        --parameters ParameterKey=domainName,ParameterValue=$DOMAIN \
                     ParameterKey=subdomainName,ParameterValue=$APPLICATION \
                     ParameterKey=applicationName,ParameterValue=$APPLICATION \
                     ParameterKey=environmentName,ParameterValue=$ENVIRONMENT

elif [ "$ACTION" == "delete" ]
then
    log "Deleting \e[1m${APPLICATION^}-$COGNITO_STACK-${ENVIRONMENT}\e[0m"
    aws cloudformation delete-stack \
        --stack-name "${APPLICATION^}-$COGNITO_STACK-${ENVIRONMENT}"
else
    log "Action not understood."
    exit 1
fi
    
rm ./cognito.yml
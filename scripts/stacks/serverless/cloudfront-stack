#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="coverage-stack"
SCRIPT_DES=$'Stands up the \e[1mCoverageStack\e[0m with the configuration specified in the \e[3menv/.env\e[0m file. This stack contains the resources for hosting a static website for artifacts generated in the pipeline, such as unit test reports, auto-documentation, security scan results, etc.'
PROJECT_DIR=$SCRIPT_DIR/../../..
source $PROJECT_DIR/env/.env

# Example Usage:
# >$     coverage-stack --action <create | update | delete> 
#
#      NOTE: `--action` defaults to `create` if not supplied.
#      NOTE: All argument flags have a short form and a long form, with single dashes and doubled dashes, e.g.
#           all of the following arguments are equivalent,
#               `--action`, `-action`, `--a`, `-a`

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        --action|-action|--a|-a)
            ACTION="$2"
            shift
            shift 
            ;;
        --help|-help|--h|-h)
            help
            exit 0
            ;;
        *)
            log "Input not understood. See \e[3m--help\e[0m for information on using this command."
            exit 1
            ;;
    esac
done

if [ -z "$ACTION" ]
then
    log "No \e[3m--action\e[0m specified. Defaulting to \e[1mcreate\e[0m"
    ACTION="create"
fi

if [ "$ACTION" == "create" ]
then
    log "Creating \e[1m${APPLICATION^}-${COVERAGE_STACK}\e[0m"
    cp $PROJECT_DIR/templates/devops/cloudfront.yml ./cloudfront.yml
    aws cloudformation create-stack \
        --stack-name "${APPLICATION^}-${COVERAGE_STACK}" \
        --template-body file://cloudfront.yml \
        --parameters ParameterKey=applicationName,ParameterValue=$APPLICATION \
                        ParameterKey=domainName,ParameterValue=$DOMAIN \
                        ParameterKey=hostedZoneId,ParameterValue=$HOSTED_ZONE_ID \
                        ParameterKey=certificateArn,ParameterValue="arn:aws:acm:$AWS_DEFAULT_REGION:$AWS_ACCOUNT_ID:certificate/$CERTIFICATE_ID"
    rm ./coverage.yml
    exit 0
elif [ "$ACTION" == "update" ]
then
    log "Updating \e[1m${APPLICATION^}-${COVERAGE_STACK}\e[0m"
    cp $PROJECT_DIR/templates/serverless/cloudfront.yml ./cloudfront.yml
    aws cloudformation update-stack \
        --stack-name "${APPLICATION^}-${COVERAGE_STACK}" \
        --template-body file://cloudfront.yml \
        --parameters ParameterKey=applicationName,ParameterValue=$APPLICATION \
                        ParameterKey=domainName,ParameterValue=$DOMAIN \
                        ParameterKey=hostedZoneId,ParameterValue=$HOSTED_ZONE_ID \
                        ParameterKey=certificateArn,ParameterValue="arn:aws:acm:$AWS_DEFAULT_REGION:$AWS_ACCOUNT_ID:certificate/$CERTIFICATE_ID"
    rm ./coverage.yml
    exit 0
elif [ "$ACTION" == "delete" ]
then
    log "Deleting \e[1m${APPLICATION^}-${COVERAGE_STACK}\e[0m"
    aws cloudformation delete-stack \
        --stack-name "${APPLICATION^}-${COVERAGE_STACK}"
    exit 0
else
    log "Action not understood"
    exit 1
fi
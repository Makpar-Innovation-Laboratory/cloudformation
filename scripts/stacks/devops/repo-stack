#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="repo-stack"
SCRIPT_DES=$'Provision the \e[2minnolab\e[0m \e[1mCodeCommit\e[0m version control repositories, \e[1mECR\e[0m image repositories, and \e[1mS3\e[0m buckets used for storing source code, artifacts and encrypted data.'
PROJECT_DIR=$SCRIPT_DIR/../../..
source $PROJECT_DIR/env/.env

# Example Usage:
# >$     repo-stack --action <create | update | delete> 

#   NOTE: ``--action`` defaults to `create` if not supplied

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
       key="$1"
       case $key in
            --action|-action|--a|-a)
                ACTION="$2"
                shift
                shift 
                ;;
            --help|-help|--h|-h)
                help
                exit 0
                ;;
            --environment|-environment|--env|-env|--e|-e)
                ENVIRONMENT="$2"
                shift
                shift
                ;;
            *)
                log "Input not understood. See \e[3m--help\e[0m for information on using this command."
                exit 1
                ;;
       esac
done

if [ -z "$ACTION" ]
then
    log "No \e[3m--action\e[0m specified. Defaulting to \e[1mcreate\e[0m"
    ACTION="create"
fi

cp $PROJECT_DIR/templates/devops/repo.yml ./repo.yml

if [ "$ACTION" == "create" ]
then
    log "Creating \e[1m${APPLICATION^}-${REPO_STACK}\e[0m"
    aws cloudformation create-stack \
        --stack-name "${APPLICATION^}-${REPO_STACK}" \
        --template-body file://repo.yml \
        --parameters ParameterKey=applicationName,ParameterValue=$APPLICATION 

elif [ "$ACTION" == "update" ]
then
    log "Updating \e[1m${APPLICATION^}-${REPO_STACK}\e[0m"
    aws cloudformation update-stack \
        --stack-name "${APPLICATION^}-${REPO_STACK}" \
        --template-body file://repo.yml \
        --parameters ParameterKey=applicationName,ParameterValue=$APPLICATION
         
elif [ "$ACTION" == "delete" ]
then
    log "Deleting \e[1m${APPLICATION^}-${REPO_STACK}\e[0m"
    aws cloudformation delete-stack \
        --stack-name "${APPLICATION^}-${REPO_STACK}"
else
    log "Action not understood"
fi

rm ./repo.yml
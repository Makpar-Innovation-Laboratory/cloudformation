AWSTemplateFormatVersion: "2010-09-09"
Description: "Provisions a DB instances with credentials resolved from the SSM parameter store and deploys it into a private subnet in the CCC-VPCStack-${environmentName}. Note: the credentials must exist in the parameter store before this template is inputted into CloudFormation. The template will provision an additional parameter store for the DB host url once the RDS instance has been created."

# # Credential Name Convention
#   /CCC/credentials/${environmentName}/dbUsername
#   /CCC/credentials/${environmentName}/dbPassword
#   /CCC/credentials/${environemtName}/dbHost

# .. notes::
#   * the script `./scripts/rds-stack --environment <environmentName>` will provision SSM parameter stores using the **RDS_USERNAME** and **RDS_PASSWORD** environment variables in the */env/.env* file before standing up this template. The username is passed into the template as a parameter, whereas the password is resolved from the SSM directly. Due to CloudFormation template limitations, you cannot resolve the username directly from the SSM store. Keep in mind, the **Lambdas** will be pulling the credentials from the parameter store, so these parameter stores must be initialized before this template will process without errors.
#   * this template will provision an additional SSM parameter store for the RDS host url. 

Parameters:
  # Stack Parameters
  dbUsername:
    Type: String
    Default: WilliamFaulkner
  environmentName:
    Type: String
    Default: Dev
  # Stack Dependencies
  vpcStack:
    Type: String
    Default: CCC-VPCStack-Dev

Resources:
    PostgresRDS:
      Type: AWS::RDS::DBInstance
      Properties:
          DBInstanceIdentifier: !Sub CCC-Database-${environmentName}
          AllocatedStorage: 100
          DBInstanceClass: db.t3.micro
          Engine: "postgres"
          MasterUsername: !Sub "{{resolve:secretsmanager:${environmentName}-dbUsername:SecretString}}"
          MasterUserPassword: !Sub "{{resolve:secretsmanager:${environmentName}-dbPassword:SecretString}}"
          BackupRetentionPeriod: 7
          MultiAZ: true
          AutoMinorVersionUpgrade: true
          Iops: 1000
          PubliclyAccessible: false
          StorageType: io1
          Port: 5432
          StorageEncrypted: true
          CopyTagsToSnapshot: true
          MonitoringInterval: 60
          EnableIAMDatabaseAuthentication: false
          EnablePerformanceInsights: true
          PerformanceInsightsRetentionPeriod: 7
          DeletionProtection: false
          DBSubnetGroupName: 
            Fn::ImportValue: !Sub ${vpcStack}-DatabaseSubnetGroup
          VPCSecurityGroups: 
            - Fn::ImportValue: !Sub ${vpcStack}-DatabaseSecurityGroup
          MaxAllocatedStorage: 1000
          MonitoringRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/rds-monitoring-role"
          Tags: 
            - Key: Environment
              Value: !Ref environmentName
  
  # PostgresHostSSMParameters:
    # Type: AWS::SSM::Parameter
    # Properties:
      # Name: 
        # !Sub "/CCC/credentials/${environmentName}/dbHost"
      # Type: String
      # Value: 
        # !GetAtt PostgresRDS.Endpoint.Address
      # Tags:
        # - Key: Environment
          # Value: !Ref environmentName
    # DependsOn:
      # - PostgresRDS

Outputs:
  RDSEndpoint:
    Value: !GetAtt PostgresRDS.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-RDSEndpoint
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  components:
    Type: String
    AllowedValues:
      - one
      - two
      - three
      - four
  environmentName:
    Type: String
    Default: Dev
  userStack:
    Type: String
    Default: CCC-UserStack

Conditions:
  CreateOneComponent: !Equals
      - !Ref components
      - one
  CreateTwoComponents: !Equals
      - !Ref components
      - two
  CreateThreeComponents: !Equals
      - !Ref components
      - three
  CreateFourComponents: !Equals
      - !Ref components
      - four
  
  CreateAlphaComponent: !Or
    - !Condition CreateOneComponent
    - !Condition CreateTwoComponents
    - !Condition CreateThreeComponents
    - !Condition CreateFourComponents

  CreateBetaComponent: !Or
    - !Condition CreateTwoComponents
    - !Condition CreateThreeComponents
    - !Condition CreateFourComponents

  CreateGammaComponent: !Or
    - !Condition CreateThreeComponents
    - !Condition CreateFourComponents

  CreateDeltaComponent: !Or
    - !Condition CreateFourComponents

Resources:
  LambdaAlphaECR:
    Type: AWS::ECR::Repository
    Condition: CreateAlphaComponent
    Description: ECR to hold image of Lambda function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
        RepositoryName: lambda-alpha
    RepositoryPolicyText:
      Version: "2012-10-17"
      Statement:
        - Sid: ECRLambdaPolicy
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
    Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-LambdaAlphaECR
        Environment: !Ref environmentName

  LambdaBetaECR:
    Type: AWS::ECR::Repository
    Condition: CreateBetaComponent
    Description: ECR to hold image of Lambda beta function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
        RepositoryName: lambda-beta
    RepositoryPolicyText:
      Version: "2012-10-17"
      Statement:
        - Sid: ECRLambdaBetaPolicy
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
    Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-LambdaBetaECR
        Environment: !Ref environmentName
  
  LambdaGammaECR:
    Type: AWS::ECR::Repository
    Condition: CreateAlphaComponent
    Description: ECR to hold image of Lambda gamma function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
        RepositoryName: lambda-gamma
    RepositoryPolicyText:
      Version: "2012-10-17"
      Statement:
        - Sid: ECRLambdaGammaPolicy
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
    Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-LambdaGammaECR
        Environment: !Ref 

  LambdaDeltaECR:
    Type: AWS::ECR::Repository
    Condition: CreateDeltaComponent
    Description: ECR to hold image of Lambda Delta function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
        RepositoryName: lambda-delta
    RepositoryPolicyText:
      Version: "2012-10-17"
      Statement:
        - Sid: ECRLambdaDeltaPolicy
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
    Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-LambdaDeltaECR
        Environment: !Ref environmentName

  PipelineLambdaECRPolicy:
    Type: AWS::IAM::Policy
    Description: Policy to allow pipeline to push and pull from ECR
    PolicyName: !Sub pipeline-alpha-ecr-policy
    PolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Sid: RepositoryPermissions
          Effect: Allow
          Action:
            - "ecr:GetAuthorizationToken"
            - "ecr:BatchCheckLayerAvailability"
            - "ecr:GetDownloadUrlForLayer"
            - "ecr:GetRepositoryPolicy"
            - "ecr:DescribeRepositories"
            - "ecr:ListImages"
            - "ecr:DescribeImages"
            - "ecr:BatchGetImage"
            - "ecr:InitiateLayerUpload"
            - "ecr:UploadLayerPart"
            - "ecr:CompleteLayerUpload"
            - "ecr:PutImage"
          Resource: 
            - !GetAtt LambdaAlphaECR.Arn
            - !GetAtt LambdaBetaECR.Arn
            - !GetAtt LambdaDeltaECR.Arn
            - !GetAtt LambdaGammaECR.Arn
    DependsOn:
      - LambdaAlphaECR
      - LambdaBetaECR
      - LambdaDeltaECR
      - LambdaGammaECR
    Users:
      - !Sub ${PipelineUser.Arn}
    Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-PipelineECRPolicy
        Environment: !Ref environmentName

Outputs:
  LambdaAlphaImageRepository:
    Value: !Ref ${LambdaAlphaECR.RepositoryUri}
  LambdaBetaImageRepository:
    Value: !Ref ${LambdaBetaECR.RepositoryUri}
  LambdaGammaImageRepository:
    Value: !Red ${LambdaGammaECR.RepositoryUri}
  LambdaDeltaImageRepositry:
    Value: !Ref ${LambdaDeltaECR.RepositoryUri}
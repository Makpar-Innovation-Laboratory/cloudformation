AWSTemplateFormatVersion: "2010-09-09"

Description: "Conditionally provisions ECRS to hold images for Lambda functions and attaches policies to pull and push to these ECRs to the PipelineUser from the CCC-UserStack."
Parameters:
  components:
    Type: String
    AllowedValues:
      - one
      - two
      - three
      - four
    Default: four
  environmentName:
    Type: String
    Default: Dev
  userStack:
    Type: String
    Default: CCC-UserStack

Conditions:
  CreateOneComponent: !Equals
      - !Ref components
      - one
  CreateTwoComponents: !Equals
      - !Ref components
      - two
  CreateThreeComponents: !Equals
      - !Ref components
      - three
  CreateFourComponents: !Equals
      - !Ref components
      - four
  
  CreateAlphaComponent: !Or
    - !Condition CreateOneComponent
    - !Condition CreateTwoComponents
    - !Condition CreateThreeComponents
    - !Condition CreateFourComponents

  CreateBetaComponent: !Or
    - !Condition CreateTwoComponents
    - !Condition CreateThreeComponents
    - !Condition CreateFourComponents

  CreateGammaComponent: !Or
    - !Condition CreateThreeComponents
    - !Condition CreateFourComponents

  CreateDeltaComponent: !Condition CreateFourComponents

Resources:
  LambdaAlphaECR:
    Type: AWS::ECR::Repository
    Condition: CreateAlphaComponent
    Description: ECR to hold image of Lambda function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
      RepositoryName: lambda-alpha
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: ECRLambdaPolicy
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-LambdaAlphaECR

  LambdaBetaECR:
    Type: AWS::ECR::Repository
    Condition: CreateBetaComponent
    Description: ECR to hold image of Lambda beta function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
      RepositoryName: lambda-beta
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: ECRLambdaBetaPolicy
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-LambdaBetaECR
  
  LambdaGammaECR:
    Type: AWS::ECR::Repository
    Condition: CreateAlphaComponent
    Description: ECR to hold image of Lambda gamma function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
      RepositoryName: lambda-gamma
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: ECRLambdaGammaPolicy
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-LambdaGammaECR

  LambdaDeltaECR:
    Type: AWS::ECR::Repository
    Condition: CreateDeltaComponent
    Description: ECR to hold image of Lambda Delta function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
      RepositoryName: lambda-delta
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: ECRLambdaDeltaPolicy
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-LambdaDeltaECR

  PipelineLambdaECRPolicy:
    Type: AWS::IAM::Policy
    Description: Policy to allow pipeline to push and pull from ECR
    Properties:
      PolicyName: !Sub pipeline-ecr-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: RepositoryPermissions
            Effect: Allow
            Action:
              - "ecr:GetAuthorizationToken"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:GetRepositoryPolicy"
              - "ecr:DescribeRepositories"
              - "ecr:ListImages"
              - "ecr:DescribeImages"
              - "ecr:BatchGetImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
              - "ecr:PutImage"
            Resource: 
              - !GetAtt LambdaAlphaECR.Arn
              - !GetAtt LambdaBetaECR.Arn
              - !GetAtt LambdaDeltaECR.Arn
              - !GetAtt LambdaGammaECR.Arn
      Users: 
        - Fn::ImportValue: !Sub ${userStack}-PipelineUserName
    DependsOn:
      - LambdaAlphaECR
      - LambdaBetaECR
      - LambdaDeltaECR
      - LambdaGammaECR

Outputs:
  LambdaAlphaImageRepository:
    Value: !GetAtt LambdaAlphaECR.RepositoryUri
    Export:
      Name: !Sub ${AWS::StackName}-LambdaAlphaImageRepository
  LambdaBetaImageRepository:
    Value: !GetAtt LambdaBetaECR.RepositoryUri
    Export:
      Name: !Sub ${AWS::StackName}-LambdaBetaImageRepository
  LambdaGammaImageRepository:
    Value: !GetAtt LambdaGammaECR.RepositoryUri
    Export:
      Name: !Sub ${AWS::StackName}-LambdaGammaImageRepository
  LambdaDeltaImageRepositry:
    Value: !GetAtt LambdaDeltaECR.RepositoryUri
    Export: 
      Name: !Sub ${AWS::StackName}-LambdaDeltaImageRepository
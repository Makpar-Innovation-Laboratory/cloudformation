AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  componentName:
    Type: String
  userStack:
    Type: String
    Default: CCC-UserStack

Resources:
  LambdaECR:
    Type: AWS::ECR::Repository
    Description: ECR to hold image of Lambda function
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
        RepositoryName: !Sub lambda-${componentName}
    RepositoryPolicyText:
      Version: "2012-10-17"
      Statement:
        - Sid: ECRLambdaPolicy
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"

  PipelineLambdaPolicy:
    Type: AWS::IAM::Policy
    Description: Policy to allow pipeline to update Lambda functions
    PolicyName: !Sub pipeline-${componentName}-lambda-policy
    PolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Sid: UpdateLambdaFunction
          Effect: Allow
          Action: 
            - "lambda:UpdateFunctionCode"
          Resource:
            - !Ref LambdaFunction.Arn
    DependsOn:
      - LambdaFunctionTest
      - LambdaFunctionDevelopment
      - LambdaFunctionProduction
    Users: 
      - !ImportValue ${userStack.PipelineUserArn}

  PipelineECRPolicy:
    Type: AWS::IAM::Policy
    Description: Policy to allow pipeline to push and pull from ECR
    PolicyName: !Sub pipeline-${componentName}-ecr-policy
    PolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Sid: RepositoryPermissions
          Effect: Allow
          Action:
            - "ecr:GetAuthorizationToken"
            - "ecr:BatchCheckLayerAvailability"
            - "ecr:GetDownloadUrlForLayer"
            - "ecr:GetRepositoryPolicy"
            - "ecr:DescribeRepositories"
            - "ecr:ListImages"
            - "ecr:DescribeImages"
            - "ecr:BatchGetImage"
            - "ecr:InitiateLayerUpload"
            - "ecr:UploadLayerPart"
            - "ecr:CompleteLayerUpload"
            - "ecr:PutImage"
          Resource: !GetAtt LambdaECR.Arn
    DependsOn:
      - LambdaECR
    Users:
      - !ImportValue ${userStack.PipelineUserArn}

Outputs:
  LambdaImageRepository:
    Value: !Ref ${LambdaECR.RepositoryUri}